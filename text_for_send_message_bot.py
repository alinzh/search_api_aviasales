
def message_hello():
    mes = "–ü—Ä–∏–≤–µ—Ç!üëã \
        \n–Ø ‚Äî –±–æ—Ç, –ø–æ–∏—Å–∫–æ–≤–∏–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤‚úàÔ∏è, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∏—Å–∫–∞—Ç—å —Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ —á–µ–º aviasales.\
 –Ø —É–º–µ—é —Å—Ç—Ä–æ–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å 2 - 6 –≥–æ—Ä–æ–¥–∞–º–∏ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –≥–∏–±–∫–∏–º–∏ –¥–∞—Ç–∞–º–∏ –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª—ë—Ç–∞.\
        \n\n–Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—åüëá\
        \n<b>‚Äî –Ω–∞–π—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤, –∏—Å—Ö–æ–¥—è –∏–∑ —Ü–µ–Ω –Ω–∞ –±–∏–ª–µ—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–ª—ë—Ç–µ</b>\
        \n‚Äî –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ –≥–æ—Ä–æ–¥–æ–≤\
        \n‚Äî —É—á–µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\
        \n‚Äî –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏\
        \n\n–Ø –Ω–∞–π–¥—É –≤—Å—ë –∏ —Å—Ä–∞–∑—É! –í –æ—Ç–≤–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª—é –º–∞—Ä—à—Ä—É—Ç—ã —Å —Ü–µ–Ω–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –±–∏–ª–µ—Ç—ã."
    return mes
def message_search_began_wait(home, finish, start_period, end_period, citys, tranzit, hate_air):
    if end_period[0] == end_period[1]:
        end_period = end_period[0]
    else:
        end_p = end_period.copy()
        end_period = str(end_p[0]) + ' - ' + str(end_p[1])
    if start_period[0] == start_period[1]:
        start_period = start_period[0]
    else:
        start_p = start_period.copy()
        end_period = str(start_p[0]) + ' - ' + str(start_p[1])
    citys_str = ''
    for city in citys:
        citys_str += city + ', '
    if tranzit == []:
        tranzit = '–Ω–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞'
    elif tranzit != []:
        tranz = tranzit.copy()
        tranzit = ''
        for one_tranzit in tranz:
            tranzit += one_tranzit[0] + ' - ' + str(one_tranzit[1]) + ' –º–∏–Ω, '
    if hate_air == []:
        hate_air = '–Ω–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞'
    else:
        hate_air = hate_air[0]
    mes = f'<b>–û—Å—É—â–µ—Å—Ç–≤–ª—è—é –ø–æ–∏—Å–∫ –±–∏–ª–µ—Ç–æ–≤ –ø–æ —Ç–∞–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</b>üëá \
\nüåá–ü–µ—Ä–≤—ã–π –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞:\n{home} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:\n{start_period} \
\n\nüåÉ–ö—Ä–∞–π–Ω–∏–π –≥–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞:\n{finish} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:\n{end_period} \
\n\n–ì–æ—Ä–æ–¥–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ: <i>{citys_str}</i> \
\n–¢—Ä–∞–Ω–∑–∏—Ç: <i>{tranzit}</i> \
\n–ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π: <i>{hate_air}</i>\n\n<i>–ù–∏–∫—É–¥–∞ –Ω–µ –Ω–∞–∂–∏–º–∞–π! \
–ü—Ä–æ—Ü–µ—Å—Å –∏–¥–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è. <b>–í —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã</b> —è –¥–∞–º —Ç–µ–±–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åüòâ</i>'
    return mes

def message_timeout_for_waiting():
    mes = f'–û–≥–æ!üò≥\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞—Å—Ç–æ–ª—å–∫–æ –æ–±—ä–µ–º–Ω—ã–º, —á—Ç–æ –∏—Ö –ø–æ–¥–±–æ—Ä –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏.\n \
    –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä–µ–º –¥—Ä—É–≥–æ–π, –Ω–µ–º–Ω–æ–≥–∏–º –ª–µ–≥—á–µ?\n \
    –Ø —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 4-5 –≥–æ—Ä–æ–¥–æ–≤‚ÄºÔ∏è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞, –ø–µ—Ä–∏–æ–¥ –≤—Å–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–µ –±–æ–ª–µ–µ 3-4 –Ω–µ–¥–µ–ª—å –∏ –±–æ–ª–µ–µ \
    —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª–µ—Ç–∞(—á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ - —Ç–µ–º –ª—É—á—à–µ).'
    return mes

def answer_with_tickets_for_user(suggested_by_price, suggested_by_time):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route

    mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n\n‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()} –º–∏–Ω\n\n{all_route_fast}'
    return mes

def message_answer_tickets_more_cheap(suggested_by_price):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route

        mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n'
    return mes

def message_answer_tickets_more_short(suggested_by_time):
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky} –º–∏–Ω\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route
        mes = f'‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()}–º–∏–Ω\n\n{all_route_fast}'
    return mes