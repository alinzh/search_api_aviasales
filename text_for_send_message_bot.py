"""
Here is stores large texts for message to user.
"""


def message_hello():
    mes = "–ü—Ä–∏–≤–µ—Ç!üëã \
        \n–Ø ‚Äî –±–æ—Ç, –ø–æ–∏—Å–∫–æ–≤–∏–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤‚úàÔ∏è, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∏—Å–∫–∞—Ç—å —Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ —á–µ–º aviasales.\
 –Ø —É–º–µ—é —Å—Ç—Ä–æ–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å 2 - 6 –≥–æ—Ä–æ–¥–∞–º–∏ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –≥–∏–±–∫–∏–º–∏ –¥–∞—Ç–∞–º–∏ –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª—ë—Ç–∞.\
        \n\n–Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—åüëá\
        \n<b>‚Äî –Ω–∞–π—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤, –∏—Å—Ö–æ–¥—è –∏–∑ —Ü–µ–Ω –Ω–∞ –±–∏–ª–µ—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–ª—ë—Ç–µ</b>\
        \n‚Äî –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ –≥–æ—Ä–æ–¥–æ–≤\
        \n‚Äî —É—á–µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\
        \n‚Äî –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏\
        \n\n–Ø –Ω–∞–π–¥—É –≤—Å—ë –∏ —Å—Ä–∞–∑—É! –í –æ—Ç–≤–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª—é –º–∞—Ä—à—Ä—É—Ç—ã —Å —Ü–µ–Ω–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –±–∏–ª–µ—Ç—ã."
    return mes

def message_chronological_search_or_not():
    mes = "üîé–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:\
        \n\n- —Å–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –≥–æ—Ä–æ–¥–æ–≤ –∏–¥—É—â–∏—Ö –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ\
        \n- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ—Ä–æ–¥–∞ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏)"
    return mes

def message_end_date_for_chronological_route():
    mes = f'<i>–°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ–º, —É—Ç–æ—á–Ω—é —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –Ω—é–∞–Ω—Åüëá</i>\n\n–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ª–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '\
          f'`YYYY.MM.DD` –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `YYYY.MM.DD - YYYY.MM.DD '
    return mes

def message_not_found():
    mes = f'–û–≥–æ!üò≥ –° —Ç–∞–∫–∏–º–∏ –∂–µ—Å—Ç–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –Ω–µ –Ω–∞—à–ª–æ—Å—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞...\n\n–ü–æ–ø—Ä–æ–±—É–µ–º —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è—Ç—å?'
    return mes

def message_something_went_wrong():
    mes = "‚ö†Ô∏è–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–Ω–∏ –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ –∫–æ–º–∞–Ω–¥–æ–π /start"
    return mes

def message_write_last_city_in_route():
    mes = "–ù–∞–ø–∏—à–∏ –∫—Ä–∞–π–Ω–∏–π –≥–æ—Ä–æ–¥ –≤ —Ç–≤–æ—ë–º –º–∞—Ä—à—Ä—É—Ç–µ. \n\n<i>–ú–æ–¥–µ–ª—å —Å–∞–º–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç " \
          "–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –¥–ª—è –Ω–µ–≥–æ.</i>"
    return mes
def message_write_first_city_in_route():
    mes = "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è. \n\n<i>–ù–∞–ø—Ä–∏–º–µ—Ä - –ú–æ—Å–∫–≤–∞ –∏–ª–∏ "\
          "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</i>."
    return mes
def message_write_last_in_route_chronological():
    mes = "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å.\n\n<i>‚òùÔ∏è–ì–æ—Ä–æ–¥–∞ –∏–¥—É—Ç " \
          "–≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.</i>"
    return mes
def message_write_last_in_route_not_chronological():
    mes = "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å–µ—Ç–∏—Ç—å.\n\n<i>‚òùÔ∏è–ì–æ—Ä–æ–¥–∞ –ù–ï –∏–¥—É—Ç –≤ " \
          "—Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ. –ú–æ–¥–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ª—É—á—à—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é " \
          "–∏—Å—Ö–æ–¥—è –∏–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤, —Ü–µ–Ω—ã –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø–æ–ª—ë—Ç–µ.</i>"
    return mes
def message_write_last_date():
    mes = "–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–ª–µ—Ç–∞. " \
          "–ü–∏—à–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ `YYYY.MM.DD` –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `YYYY.MM.DD - YYYY.MM.DD`"
    return mes
def message_tranzit_in_wrong_format():
    mes = "‚ö†Ô∏è–¢—Ä–∞–Ω–∑–∏—Ç –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.\n–í–≤–µ–¥–∏ –µ—â–µ —Ä–∞–∑, –ª–∏–±–æ –≤ –¥–Ω—è—Ö - —á–∏—Å–ª–æ —Å –±—É–∫–≤–æ–π '–¥', –∏–±–æ –≤ —á–∞—Å–∞—Ö - —á–∏—Å–ª–æ " \
          "—Å –±—É–∫–≤–æ–π '—á'.\n<b>–ù–∞–ø—Ä–∏–º–µ—Ä '7–¥' –∏–ª–∏ '12—á'.</b>"
    return mes
def message_write_tranzit():
    mes = "üïò–ù–∞–ø–∏—à–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ —Ç—Ä–∞–Ω–∑–∏—Ç–∞ —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –≥–æ—Ä–æ–¥. \n\n<i>–ü–∏—à–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–Ω–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä - '5–¥', " \
          "–ª–∏–±–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä - '10—á'.</i>"
    return mes
def message_write_date():
    mes = "–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `YYYY.MM.DD` –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `YYYY.MM.DD - YYYY.MM.DD`"
    return mes
def message_tickets_finish():
    mes = f'–£–≤—ã, –≤—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ –±–∏–ª–µ—Ç—ã.\n–ü—Ä–æ–¥–æ–ª–∂–∏–º –ø–æ–∏—Å–∫ —Å –¥—Ä—É–≥–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏?'
    return mes
def message_date_in_wrong_format():
    mes = "‚ö†Ô∏è–î–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø–∏—à–∏ –µ–µ, –∫–∞–∫ –≤ " \
          "–ø—Ä–∏–º–µ—Ä–µ:\n- —Ç–æ—á–Ω–∞—è –¥–∞—Ç–∞ `YYYY.MM.DD` \n- –ø–µ—Ä–∏–æ–¥ `YYYY.MM.DD - YYYY.MM.DD`"
    return mes
def message_circle_or_not():
    mes = "–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π —É —Ç–µ–±—è –º–∞—Ä—à—Ä—É—Ç.\n\n<i>–ö–æ–ª—å—Ü–µ–≤–æ–π - —Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –ø–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç –≤—ã–ª–µ—Ç–∞. \n–í –æ–¥–∏–Ω " \
          "–∫–æ–Ω–µ—Ü - –∞—ç—Ä–æ–ø–æ—Ä—Ç –≤—ã–ª–µ—Ç–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Å –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–º –ø—Ä–∏–ª–µ—Ç–∞.</i>"
    return mes
def message_period_longer_than_allowed():
    mes = "‚ö†Ô∏è–£–∫–∞–∑–∞–Ω –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–µ—Ä–∏–æ–¥, –æ—Ç –Ω–∞—á–∞–ª–∞ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ 31 –¥–Ω—è. \n\n–£–∫–∞–∂–∏—Ç–µ " \
          "–¥–∞—Ç—É –∏–ª–∏ –ø–µ—Ä–∏–æ–¥, —á—Ç–æ–±—ã –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç –¥–∞—Ç—ã –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ª–µ—Ç–∞ –±—ã–ª –Ω–µ –±–æ–ª–µ–µ 3 –Ω–µ–¥–µ–ª—å."
    return mes
def message_name_of_company_is_wrong():
    mes = "‚ö†Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑, –ø–∏—à–∏ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã.\n–ï—Å–ª–∏ " \
          "—Å–æ–º–Ω–µ–≤–∞–µ—à—å—Å—è - –ø–æ—Å–º–æ—Ç—Ä–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n'–†–µ–¥ –í–∏–Ω–≥—Å' –∏–ª–∏ " \
          "'–°–µ–≤–µ—Ä–Ω—ã–π –í–µ—Ç–µ—Ä (Nordwind Airlines)'"
    return mes
def message_write_name_of_company():
    mes = "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—É—é –Ω–µ —Å—Ç–æ–∏—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –ø–æ–¥–±–æ—Ä–∫—É. \n\n<i>–ü–∏—à–∏ " \
          "—Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä - –ü–æ–±–µ–¥–∞ –∏–ª–∏ –ê–∑–∏–º—É—Ç.</i>"
    return mes
def message_city_of_departure_and_arrival_same():
    mes = "‚ö†Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–ª–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –≥–æ—Ä–æ–¥–æ–º –≤—ã–ª–µ—Ç–∞, —Ç–∞–∫–æ–π —Ñ–∏–ª—å—Ç—Ä –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É. " \
          "–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∫–æ–ª—å—Ü–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ö–æ–ª—å—Ü–µ–≤–æ–π."
    return mes
def message_name_of_city_is_wrong():
    mes = "‚ö†Ô∏è–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —É–∫–∞–∑–∞–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏, –ø—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ –∏ –Ω–∞–ø–∏—à–∏ –µ—â–µ —Ä–∞–∑ –≤ –ò.–ü. —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã"
    return mes
def message_city_alredy_in_route():
    mes = "‚ö†Ô∏è–≠—Ç–æ—Ç –≥–æ—Ä–æ–¥ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–∞—Ä—à—Ä—É—Ç. –í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π."
    return mes
def message_no_more_cities():
    mes = "‚ö†Ô∏è–õ–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ä–æ–¥–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω. \n–ù–∞—á–Ω–µ–º –ø–æ–∏—Å–∫?"
    return mes
def message_search_began_wait(home, finish, start_period, end_period, citys, tranzit, hate_air):
    if end_period[0] == end_period[1]:
        end_period = end_period[0]
    else:
        end_p = end_period.copy()
        end_period = str(end_p[0]) + ' - ' + str(end_p[1])
    if start_period[0] == start_period[1]:
        start_period = start_period[0]
    else:
        start_p = start_period.copy()
        start_period = str(start_p[0]) + ' - ' + str(start_p[1])
    citys_str = ''
    for city in citys:
        citys_str += city + ', '
    if tranzit == []:
        tranzit = '–Ω–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞'
    elif tranzit != []:
        tranz = tranzit.copy()
        tranzit = ''
        for one_tranzit in tranz:
            tranzit += one_tranzit[0] + ' - ' + str(one_tranzit[1]) + ' –º–∏–Ω, '
    if hate_air == []:
        hate_air = '–Ω–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞'
    else:
        hate_air = hate_air[0]
    mes = f'<b>–û—Å—É—â–µ—Å—Ç–≤–ª—è—é –ø–æ–∏—Å–∫ –±–∏–ª–µ—Ç–æ–≤ –ø–æ —Ç–∞–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</b>üëá \
\nüåá–ü–µ—Ä–≤—ã–π –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞:\n{home} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:\n{start_period} \
\n\nüåÉ–ö—Ä–∞–π–Ω–∏–π –≥–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞:\n{finish} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:\n{end_period} \
\n\n–ì–æ—Ä–æ–¥–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ: <i>{citys_str}</i> \
\n–¢—Ä–∞–Ω–∑–∏—Ç: <i>{tranzit}</i> \
\n–ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π: <i>{hate_air}</i>\n\n<i>–ù–∏–∫—É–¥–∞ –Ω–µ –Ω–∞–∂–∏–º–∞–π! \
–ü—Ä–æ—Ü–µ—Å—Å –∏–¥–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è. <b>–í —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã</b> —è –¥–∞–º —Ç–µ–±–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åüòâ</i>'
    return mes

def message_timeout_for_waiting():
    mes = f'–û–≥–æ!üò≥\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞—Å—Ç–æ–ª—å–∫–æ –æ–±—ä–µ–º–Ω—ã–º, —á—Ç–æ –∏—Ö –ø–æ–¥–±–æ—Ä –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏.\n \
    –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä–µ–º –¥—Ä—É–≥–æ–π, –Ω–µ–º–Ω–æ–≥–∏–º –ª–µ–≥—á–µ?\n \
    –Ø —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 4-5 –≥–æ—Ä–æ–¥–æ–≤‚ÄºÔ∏è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞, –ø–µ—Ä–∏–æ–¥ –≤—Å–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–µ –±–æ–ª–µ–µ 3-4 –Ω–µ–¥–µ–ª—å –∏ –±–æ–ª–µ–µ \
    —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª–µ—Ç–∞(—á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ - —Ç–µ–º –ª—É—á—à–µ).'
    return mes

def answer_with_tickets_for_user(suggested_by_price, suggested_by_time):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route

    mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n\n‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()} –º–∏–Ω\n\n{all_route_fast}'
    return mes

def message_answer_tickets_more_cheap(suggested_by_price):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route

        mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n'
    return mes

def message_answer_tickets_more_short(suggested_by_time):
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky} –º–∏–Ω\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route
        mes = f'‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()}–º–∏–Ω\n\n{all_route_fast}'
    return mes