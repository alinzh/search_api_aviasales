
def message_hello():
    mes = "–ü—Ä–∏–≤–µ—Ç!üëã \
        \n–Ø ‚Äî –±–æ—Ç, –ø–æ–∏—Å–∫–æ–≤–∏–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤‚úàÔ∏è, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –∏—Å–∫–∞—Ç—å —Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ —á–µ–º aviasales. –Ø —É–º–µ—é —Å—Ç—Ä–æ–∏—Ç—å \
        —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å –≥–∏–±–∫–∏–º–∏ –¥–∞—Ç–∞–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—É–Ω–∫—Ç–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞.\
        \n\n–Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—åüëá\
        \n‚Äî –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ –≥–æ—Ä–æ–¥–æ–≤\
        \n‚Äî –Ω–∞–π—Ç–∏ —Å–∞–º—É—é –¥–µ—à–µ–≤—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ—Ä–æ–¥–æ–≤ –≤ –º–∞—Ä—à—Ä—É—Ç–µ\
        \n‚Äî –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ –∏–ª–∏ —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ \
        \n\n–¢—ã –º–æ–∂–µ—à—å —É–∫–∞–∑–∞—Ç—åüëá\
        \n‚Äî –≤–æ–∑–≤—Ä–∞—Ç–Ω—ã–π –∏–ª–∏ –Ω–µ—Ç –º–∞—Ä—à—Ä—É—Ç\
        \n‚Äî –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –≤ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞ \
        \n‚Äî –ø–µ—Ä–∏–æ–¥ –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª–µ—Ç–∞ (–ø–ª–∞–≤–∞—é—â–∞—è –¥–∞—Ç–∞ –∏–ª–∏ —Ç–æ—á–Ω–∞—è)\
        \n‚Äî –ø–µ—Ä–µ—Å–∞–¥–∫—É –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –≥–æ—Ä–æ–¥–µ (–≤ –¥–Ω—è—Ö –∏–ª–∏ —á–∞—Å–∞—Ö ‚Äî –Ω–∞ –≤—ã–±–æ—Ä), –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –æ—Ç 60 –º–∏–Ω\
        \n‚Äî –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–ª–µ–¥—É–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –≤ –º–∞—Ä—à—Ä—É—Ç \
        üôè\n\n–ú–æ—è –º–∏—Å—Å–∏—è: \
        \n–ü–æ–º–æ–≥–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–∞–º—ã–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –º–∞—Ä—à—Ä—É—Ç–∞ –±–µ–∑ –¥–æ–ª–≥–æ–≥–æ –∏ \
        —É—Ç–æ–º–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤—Ä—É—á–Ω—É—é. –°–æ –º–Ω–æ–π —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –µ–¥–∏–Ω–∞–∂–¥—ã –≤–≤–µ—Å—Ç–∏ –≤—Å–µ –∂–µ–ª–∞–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π \
        –º–∞—Ä—à—Ä—É—Ç –∏–∑ —Ç–µ—Ö, —á—Ç–æ —è –ø—Ä–µ–¥–ª–æ–∂—É.\
        \n\nP.S. \
        \n–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –µ—Å–ª–∏ –≤ —Å–ª—É—á–∞–µ –±–æ–ª—å—à–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç –∏–ª–∏ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª-–≤–∞ –≥–æ—Ä–æ–¥–æ–≤ —è —Å—Ç–∞–Ω—É —Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ–ª–≥–æ.\
        –ò–Ω–æ–≥–¥–∞, –≤ –æ—Å–æ–±–æ –æ–±—ä–µ–º–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö, —è –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ 1 –º–∏–Ω—É—Ç—ã. –ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è —Ç—ã –º–æ–∂–µ—à—å –≤—ã–π—Ç–∏ –∏ –ø–æ—Å–∫—Ä–æ–ª–ª–∏—Ç—å\
        –ª–µ–Ω—Ç—É, –∞ –ø–æ—Ç–æ–º ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è. –ì–ª–∞–≤–Ω–æ–µ, –Ω–µ –≤—ã–∫–ª—é—á–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüòâ"
    return mes
def message_search_began_wait(home, finish, start_period, end_period, citys, tranzit, hate_air):
    mes = f'<b>–û—Å—É—â–µ—Å—Ç–≤–ª—è—é –ø–æ–∏—Å–∫ –±–∏–ª–µ—Ç–æ–≤ –ø–æ —Ç–∞–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</b>üëá \
\nüåá–ü–µ—Ä–≤—ã–π –≥–æ—Ä–æ–¥ –≤—ã–ª–µ—Ç–∞:{home} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:{start_period} \
\n\nüåÉ–ö—Ä–∞–π–Ω–∏–π –≥–æ—Ä–æ–¥ –ø—Ä–∏–ª–µ—Ç–∞:{finish} \
\nüìÖ–ü–µ—Ä–∏–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞:{end_period} \
\n\n–ì–æ—Ä–æ–¥–∞ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ: {[str(city) for city in citys]} \
\n–¢—Ä–∞–Ω–∑–∏—Ç: {[str(pair) for pair in tranzit]} \
\n–ò—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–π: {hate_air}\n\n–ù–∏–∫—É–¥–∞ –Ω–µ –Ω–∞–∂–∏–º–∞–π! \
–ü—Ä–æ—Ü–µ—Å—Å –∏–¥–µ—Ç, –Ω–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è. <b>–í —Ç–µ—á–µ–Ω–∏–∏ –º–∏–Ω—É—Ç—ã</b> —è –¥–∞–º —Ç–µ–±–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åüòâ'
    return mes

def message_timeout_for_waiting():
    mes = f'–û–≥–æ!üò≥\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞—Å—Ç–æ–ª—å–∫–æ –æ–±—ä–µ–º–Ω—ã–º, —á—Ç–æ –∏—Ö –ø–æ–¥–±–æ—Ä –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏.\n \
    –î–∞–≤–∞–π –ø–æ–¥–±–µ—Ä–µ–º –¥—Ä—É–≥–æ–π, –Ω–µ–º–Ω–æ–≥–∏–º –ª–µ–≥—á–µ?\n \
    –Ø —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 4-5 –≥–æ—Ä–æ–¥–æ–≤‚ÄºÔ∏è –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞, –ø–µ—Ä–∏–æ–¥ –≤—Å–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–µ –±–æ–ª–µ–µ 3-4 –Ω–µ–¥–µ–ª—å –∏ –±–æ–ª–µ–µ \
    —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞ –∏ –ø—Ä–∏–ª–µ—Ç–∞(—á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ–µ - —Ç–µ–º –ª—É—á—à–µ).'
    return mes

def answer_with_tickets_for_user(suggested_by_price, suggested_by_time):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route

    mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n\n‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()} –º–∏–Ω\n\n{all_route_fast}'
    return mes

def message_answer_tickets_more_cheap(suggested_by_price):
    all_route_cheap = f''
    for idx, flight in enumerate(suggested_by_price.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky}\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_cheap += route

        mes = f'üí∞<b>–°–∞–º—ã–π –¥–µ—à–µ–≤—ã–π</b>\nüí∏–¶–µ–Ω–∞ –∑–∞ –≤—Å–µ –ø–µ—Ä–µ–ª—ë—Ç—ã: {suggested_by_price.total_price()}‚ÇΩ\n\n{all_route_cheap}\n'
    return mes

def message_answer_tickets_more_short(suggested_by_time):
    all_route_fast = f''
    for idx, flight in enumerate(suggested_by_time.storage):
        number = (idx + 1)
        first_airport = flight[0]
        second_airport = flight[1]
        dict_with_data = flight[2]
        price = dict_with_data['weight']
        departure = dict_with_data['time']
        airline = dict_with_data['airlines']
        time_in_sky = dict_with_data['time_in_sky']
        link = f"https://www.aviasales.ru{dict_with_data['link']}"
        route = f'{number}) –ò–∑ <b>{first_airport}üõ´</b>\n–í <b>{second_airport}üõ¨</b>\n–¶–µ–Ω–∞ —Ä–µ–π—Å–∞: {price}‚ÇΩ\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {departure}\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–µ–π—Å–∞: {time_in_sky} –º–∏–Ω\'' \
                f'\n–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {airline}\n<a href="{link}">‚úàÔ∏è–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∏–ª–µ—Ç. –ù–∞–∂–º–∏!</a>\n'
        all_route_fast += route
        mes = f'‚ö°Ô∏è<b>–°–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π</b>\n‚è≥–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤: {suggested_by_time.total_time()}–º–∏–Ω\n\n{all_route_fast}'
    return mes